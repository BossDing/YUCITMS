package com.yucitms.action.netLesson;

import java.io.File;
import java.util.Date;

import com.opensymphony.xwork2.ActionContext;
import com.yucitms.action.BaseAction;
import com.yucitms.config.Config;
import com.yucitms.orm.netLesson.ExcellentCourse;
import com.yucitms.orm.netLesson.ExcellentTeacher;
import com.yucitms.util.HqlHelper;
import com.yucitms.util.PageBean;
import com.yucitms.util.UpLoadUtil;

public class ExcellentTeacherAction extends BaseAction<ExcellentTeacher>{
/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	///////////////////后台
	private Integer courseId;
	private String uploadFileName;
	private File upload;
	private String uploadContentType;
	/**
	 * 教师团队列表
	 * @return
	 */
	public String getExcellentTeacherList(){
		HqlHelper hqlHelper = new HqlHelper(ExcellentTeacher.class, "et");
		hqlHelper.addWhereCondition("et.course.id=?", courseId);
		hqlHelper.addWhereCondition(model.getTeacherName()!=null&&!model.getTeacherName().equals(""), "et.teacherName like ?","%"+model.getTeacherName()+"%");
		PageBean pageBean=excellentTeacherService.getExcellentTeacherList(pageNum,Config.EXCELLENTCOURSE_PageSize, hqlHelper);
		ActionContext.getContext().getValueStack().push(pageBean);
		return "getExcellentTeacherList";
	}
	/**
	 * 添加教师
	 * @return
	 */
	public String addExcellentTeacherPage(){
		return "addExcellentTeacherPage";
	}
	public String addExcellentTeacher(){
		System.out.println("文件名称"+uploadFileName);
		try {
			uploadFileName=UpLoadUtil.Upload_FtpOrLocal(Config.UPLOAD_method, uploadFileName, upload, Config.EXCELLENTCOURSE_SaveImgPath, Config.FTP_addrss, Config.FTP_username, Config.FTP_password);
			model.setImgPath(uploadFileName);
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		ExcellentCourse course=excellentCourseService.getById(courseId);
		model.setCourse(course);
		model.setCreateDate(new Date());
		excellentTeacherService.addExcellentTeacher(model);
		return "excellentTeacherList";
	}
	/**
	 * 更新
	 */
	public String updateExcellentTeacherPage(){
		ExcellentTeacher excellentTeacher = excellentTeacherService.getById(model.getId());
		ActionContext.getContext().getValueStack().push(excellentTeacher);
		return "updateExcellentTeacherPage";
	}
	public String updateExcellentTeacher(){
		ExcellentTeacher excellentTeacher = excellentTeacherService.getById(model.getId());
		try {
			if(upload!=null){
				uploadFileName=UpLoadUtil.Upload_FtpOrLocal(Config.UPLOAD_method, uploadFileName, upload, Config.EXCELLENTCOURSE_SaveImgPath, Config.FTP_addrss, Config.FTP_username, Config.FTP_password);
				excellentTeacher.setImgPath(uploadFileName);  				
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		excellentTeacher.setContent(model.getContent());
		excellentTeacher.setJobTitle(model.getJobTitle());
		excellentTeacher.setTeacherName(model.getTeacherName());
		excellentTeacherService.updateExcellentTeacher(excellentTeacher);
		return "excellentTeacherList";
	}
	/**
	 * 删除
	 * @return
	 */
	public String deleteExcellentTeacher(){
		excellentTeacherService.deleteExcellentTeacher(model.getId());
		return "excellentTeacherList";
	}
	public Integer getCourseId() {
		return courseId;
	}
	public void setCourseId(Integer courseId) {
		this.courseId = courseId;
	}
	
	public String getUploadFileName() {
		return uploadFileName;
	}
	public void setUploadFileName(String uploadFileName) {
		this.uploadFileName = uploadFileName;
	}
	public File getUpload() {
		return upload;
	}
	public void setUpload(File upload) {
		this.upload = upload;
	}
	public String getUploadContentType() {
		return uploadContentType;
	}
	public void setUploadContentType(String uploadContentType) {
		this.uploadContentType = uploadContentType;
	}
	
}
